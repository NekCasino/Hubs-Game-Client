import * as fs from 'fs';
import * as path from 'path';
import { glob } from 'glob';

// –ü—É—Ç—å –∫ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º TypeScript —Ñ–∞–π–ª–∞–º
const TYPES_DIR = path.resolve(__dirname, '../src/types');

/**
 * –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ .service.ts —Ñ–∞–π–ª—ã –≤ .types.ts –∏ —É–¥–∞–ª—è–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—ã
 */
async function renameGeneratedFiles() {
  console.log('üîç –ü–æ–∏—Å–∫ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...');
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
  const files = glob.sync(`${TYPES_DIR}/**/*.service.ts`);
  console.log(`üîç –ù–∞–π–¥–µ–Ω–æ ${files.length} —Ñ–∞–π–ª–æ–≤`);
  
  for (const file of files) {
    const dirName = path.dirname(file);
    const baseName = path.basename(file, '.service.ts');
    const newName = path.join(dirName, `${baseName}.types.ts`);
    
    // –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ –Ω–æ–≤—ã–π —Ñ–∞–π–ª
    let content = fs.readFileSync(file, 'utf-8');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ —Ç–æ–º –∂–µ –∫–∞—Ç–∞–ª–æ–≥–µ
    const siblingFiles = glob.sync(`${dirName}/*.service.ts`);
    
    // –ó–∞–º–µ–Ω—è–µ–º –∏–º–ø–æ—Ä—Ç—ã –∏–∑ –¥—Ä—É–≥–∏—Ö .service.ts —Ñ–∞–π–ª–æ–≤ –Ω–∞ –∏–º–ø–æ—Ä—Ç—ã –∏–∑ .types.ts
    for (const siblingFile of siblingFiles) {
      const siblingBaseName = path.basename(siblingFile, '.service.ts');
      if (siblingBaseName !== baseName) {
        const regex = new RegExp(`from ['"]\\.\\/${siblingBaseName}.service['"]`, 'g');
        content = content.replace(regex, `from './${siblingBaseName}.types'`);
      }
    }
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ –Ω–æ–≤—ã–π —Ñ–∞–π–ª
    fs.writeFileSync(newName, content);
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª ${newName}`);
    
    // –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª .service.ts
    fs.unlinkSync(file);
    console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª ${file}`);
  }
  
  console.log('‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}

renameGeneratedFiles().catch(err => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤:', err);
  process.exit(1);
}); 